# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.menu_item import MenuItem
from openapi_server import util

from openapi_server.models.menu_item import MenuItem  # noqa: E501


class Cart(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, menu_items=None):  # noqa: E501
        """Cart - a model defined in OpenAPI

        :param menu_items: The menu_items of this Cart.  # noqa: E501
        :type menu_items: List[MenuItem]
        """
        self.openapi_types = {"menu_items": List[MenuItem]}

        self.attribute_map = {"menu_items": "menuItems"}

        self._menu_items = menu_items

    @classmethod
    def from_dict(cls, dikt) -> "Cart":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Cart of this Cart.  # noqa: E501
        :rtype: Cart
        """
        return util.deserialize_model(dikt, cls)

    @property
    def menu_items(self):
        """Gets the menu_items of this Cart.


        :return: The menu_items of this Cart.
        :rtype: List[MenuItem]
        """
        return self._menu_items

    @menu_items.setter
    def menu_items(self, menu_items):
        """Sets the menu_items of this Cart.


        :param menu_items: The menu_items of this Cart.
        :type menu_items: List[MenuItem]
        """
        if menu_items is None:
            raise ValueError(
                "Invalid value for `menu_items`, must not be `None`"
            )  # noqa: E501

        self._menu_items = menu_items
